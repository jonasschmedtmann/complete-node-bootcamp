const spawn = require('cross-spawn');
const chalk = require('chalk');

const js = ['bin/**/*.js', 'interface/**/*.js', 'tools/**/*.js', '*.js'];
const doc = ['doc/**/*.md'];

const execSpawn = ({
  command = [],
  name,
  onData = msg => console.log(String(msg)),
  onError = error => console.log(String(error)),
  onClose = () => {},
} = {}) => {
  return new Promise((resolve, reject) => {
    const child = spawn('node', command);
    child.stdout.on('data', onData);
    child.stderr.on('data', error => {
      console.log(chalk.red.bold(`${name}操作报错`));
      onError(error);
      reject(error);
    });
    child.on('close', code => {
      onClose(code);
      if (code === 0) {
        console.log(chalk.green.bold(`${name}操作成功`));
        resolve();
      } else {
        console.log(chalk.red.bold(`${name}操作失败`));
        reject();
      }
    });
  });
};

const main = async () => {
  try {
    await Promise.all([
      execSpawn({
        name: 'eslint',
        command: ['./node_modules/eslint/bin/eslint.js', ...js],
      }),

      execSpawn({
        name: 'prettier',
        command: [
          './node_modules/prettier/bin-prettier.js',
          ...js,
          ...doc,
          '--write',
        ],
        onData: () => {},
      }),
    ]);
    console.log(chalk.green.bold('\n最终操作成功'));
    process.exit(0);
  } catch (error) {
    console.log(chalk.red.bold('\n最终操作失败'));
    process.exit(1);
  }
};

main();

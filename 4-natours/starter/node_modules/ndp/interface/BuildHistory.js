const Interface = require('./Interface');
const getContent = require('./utils/getContent');
const isValidString = require('../tools/isValidString');

class BuildHistory extends Interface {
  constructor({
    urlPath = '/NDP/listBuildVersionList',
    urlName = '获取最近的构建版本',
    env,
  } = {}) {
    super({ urlPath, urlName, env });
  }

  async list(clusterId) {
    if (!Number.isInteger(clusterId)) {
      throw new Error('BuildHistory->list需clusterId');
    }
    const { json } = await this.sendRequest({
      urlArgs: { clusterId },
    });
    const { list } = getContent(json);
    if (!Array.isArray(list)) {
      throw new Error(this.wrongDataWarning('data->list'));
    }
    return list.map(({ branch, buildTime, buildVersion: hash, id } = {}) => {
      if (
        !isValidString(branch) ||
        !isValidString(buildTime) ||
        !Number.isInteger(id) ||
        !isValidString(hash)
      ) {
        throw new Error(
          this.wrongDataWarning('data->list->branch||buildTime||buildVersion'),
        );
      }
      return { buildTime, branch, hash, id };
    });
  }
}

module.exports = BuildHistory;

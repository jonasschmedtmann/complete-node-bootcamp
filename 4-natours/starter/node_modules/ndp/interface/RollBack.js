const Interface = require('./Interface');
const Deploy = require('./Deploy');
const wait = require('../tools/wait');
const logger = require('../tools/logger');

class RollBack extends Interface {
  constructor({
    urlPath = '/NDP/rollbackWithStop',
    urlName = '回滚',
    serverInfo,
    cluster,
    env,
  } = {}) {
    if (typeof serverInfo !== 'object' || typeof cluster !== 'object') {
      throw new Error('无效serverInfo,cluster');
    }
    super({ urlPath, urlName, env });
    this.serverInfo = serverInfo;
    this.cluster = cluster;
  }

  async back({ clusterId, versionId }) {
    if (!Number.isInteger(clusterId) || !Number.isInteger(versionId)) {
      throw new Error(`接口${this.urlPath}需有效clusetId,versionId`);
    }
    const batchInfo = await this.serverInfo.getConfig(clusterId);
    const batchList = Deploy.creatBatchList(batchInfo);
    await this.sendRequest({
      requestOpt: {
        method: 'POST',
        body: {
          clusterId,
          versionId,
          batchList,
        },
      },
    });
    const interFaceDelay = 1000;
    await wait(interFaceDelay);
    await this.cluster.queryUnitIdle({
      clusterId,
      whenBuildInfo: '回滚正在构建中..',
      whenDeployInfo: '回滚正在发布中..',
    });
    logger.success('回滚成功');
  }
}

module.exports = RollBack;
